{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","redux/phonebook-actions.js","redux/phonebook-operations.js","redux/phonebook-reducers.js","redux/store.js","redux/phonebook-selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Phonebook/Phonebook.js","App.js","index.js","components/Phonebook/Phonebook.module.css"],"names":["module","exports","changeFilter","createAction","postAddContact","createAsyncThunk","contact","a","rejectWithValue","axios","post","fetchContacts","_","get","data","deleteContact","contactId","delete","contactsReducer","createReducer","fulfilled","action","payload","state","filter","id","filterReducer","loadingReducer","pending","rejected","rootReducer","combineReducers","contacts","loading","store","configureStore","reducer","getContacts","isLoader","getFilteredContacts","createSelector","normalizedFilter","toLocaleLowerCase","name","includes","ContactForm","useState","setName","number","setNumber","useSelector","loader","dispatch","useDispatch","useEffect","onFormChange","target","value","checkContactList","normalizedName","find","alert","newContactId","shortid","generate","addNewContact","resetForm","className","s","form","onSubmit","e","preventDefault","label","htmlFor","span","input","type","placeholder","pattern","title","required","onChange","btnBox","btn","ContactList","ul","map","li","onClick","onDeleteContact","Filter","Phonebook","box","divBox","boxList","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6873091.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactList_li__34r2F\",\"ul\":\"ContactList_ul__1dcpO\",\"btn\":\"ContactList_btn__2COK9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2-7Dw\",\"span\":\"Filter_span__JjXqJ\",\"input\":\"Filter_input__3Grxa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__35e5B\",\"label\":\"ContactForm_label__19SkC\",\"input\":\"ContactForm_input__2XnLq\",\"span\":\"ContactForm_span__17CWr\",\"btn\":\"ContactForm_btn__198Ud\",\"btnBox\":\"ContactForm_btnBox__1R90l\",\"loader\":\"ContactForm_loader__1AvbQ\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('contact/changeFilter');\n\n// export const addContactRequest = createAction('addContactRequest');\n// export const addContactSuccess = createAction('addContactSuccess');\n// export const addContactError = createAction('addContactError');\n\n// export const fetchContactRequest = createAction('fetchContactRequest');\n// export const fetchContactSuccess = createAction('fetchContactSuccess');\n// export const fetchContactError = createAction('fetchContactError');\n\n// export const deleteContactRequest = createAction('deleteContactRequest');\n// export const deleteContactSuccess = createAction('deleteContactSuccess');\n// export const deleteContactError = createAction('deleteContactError');\n\n// export const deleteContact = createAction('contact/delete');\n// export const submitContacts = createAction('contact/submit');\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n// import {\n//   // addContactRequest,\n//   // addContactSuccess,\n//   // addContactError,\n//   // fetchContactRequest,\n//   // fetchContactSuccess,\n//   // fetchContactError,\n//   // deleteContactRequest,\n//   // deleteContactSuccess,\n//   // deleteContactError,\n// } from './phonebook-actions';\n\nexport const postAddContact = createAsyncThunk(\n  'addContacts',\n  async (contact, { rejectWithValue }) => {\n    try {\n      await axios.post('http://localhost:3000/contacts', contact);\n      return contact;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const fetchContacts = createAsyncThunk(\n  'fetchContact',\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.get('http://localhost:3000/contacts');\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'deleteContact',\n  async (contactId, { rejectWithValue }) => {\n    try {\n      await axios.delete(`http://localhost:3000/contacts/${contactId}`);\n      return contactId;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\n// export const postAddContact = contact => async dispatch => {\n// dispatch(addContactRequest());\n\n// try {\n//   const { data } = await axios.post(\n//     'http://localhost:3000/contacts',\n//     contact,\n//   );\n//   dispatch(addContactSuccess(data));\n// } catch (error) {\n//   dispatch(addContactError(error));\n// }\n// axios\n//   .post('http://localhost:3000/contacts', contact)\n//   .then(({ data }) => dispatch(addContactSuccess(data)))\n//   .catch(error => dispatch(addContactError(error)));\n// };\n\n// export const fetchContacts = () => async dispatch => {\n//   dispatch(fetchContactRequest());\n\n//   try {\n//     const { data } = await axios.get('http://localhost:3000/contacts');\n//     dispatch(fetchContactSuccess(data));\n//   } catch (error) {\n//     dispatch(fetchContactError(error));\n//   }\n// axios\n//   .get('http://localhost:3000/contacts')\n//   .then(({ data }) => dispatch(fetchContactSuccess(data)))\n//   .catch(error => dispatch(fetchContactError(error)));\n// };\n\n// export const deleteContact = contactId => async dispatch => {\n// dispatch(deleteContactRequest());\n\n// try {\n//   await axios.delete(`http://localhost:3000/contacts/${contactId}`);\n//   dispatch(deleteContactSuccess(contactId));\n// } catch (error) {\n//   dispatch(deleteContactError(error));\n// }\n//   axios\n//     .delete(`http://localhost:3000/contacts/${contactId}`)\n//     .then(() => dispatch(deleteContactSuccess(contactId)))\n//     .catch(error => dispatch(deleteContactError(error)));\n// };\n\n// export const submitContacts = text => async dispatch => {\n//   const options = {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify(text),\n//   };\n\n//   dispatch(addContactRequest());\n\n//   return await fetch('http://localhost:3000/contacts', options)\n//     .then(response => response.json())\n//     .then(data => dispatch(addContactSuccess(data)))\n//     .catch(error => dispatch(addContactError(error)));\n// };\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  // deleteContact,\n  // submitContacts,\n  changeFilter,\n} from './phonebook-actions';\n// import {\n// addContactRequest,\n// addContactSuccess,\n// addContactError,\n// fetchContactRequest,\n// fetchContactSuccess,\n// fetchContactError,\n// deleteContactRequest,\n// deleteContactSuccess,\n// deleteContactError,\n// } from './phonebook-actions';\nimport {\n  fetchContacts,\n  postAddContact,\n  deleteContact,\n} from './phonebook-operations';\n// import defaultContacts from '../json/defaultContacts.json';\n\nexport const contactsReducer = createReducer([], {\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\n  [postAddContact.fulfilled]: (state, action) => [...state, action.payload],\n  [deleteContact.fulfilled]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nexport const filterReducer = createReducer('', {\n  [changeFilter]: (_, action) => action.payload,\n});\n\nexport const loadingReducer = createReducer(false, {\n  [postAddContact.pending]: () => true,\n  [postAddContact.fulfilled]: () => false,\n  [postAddContact.rejected]: () => false,\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\n// import {\n//   // persistStore,\n//   // persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\nimport {\n  contactsReducer,\n  filterReducer,\n  loadingReducer,\n} from './phonebook-reducers';\n\n// const contactsPersistConfig = {\n//   key: 'contacts',\n//   storage,\n//   blacklist: ['filter'],\n// };\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n  loading: loadingReducer,\n});\n\n// const persistedReducer = persistReducer(contactsPersistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: rootReducer,\n  // middleware: getDefaultMiddleware =>\n  //   getDefaultMiddleware({\n  //     serializableCheck: {\n  //       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n  //     },\n  //   }),\n  // devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n\nexport { store };\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts;\nexport const getFilter = state => state.filter;\nexport const isLoader = state => state.loading;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLocaleLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\n// export const getFilteredContacts = state => {\n//   const contacts = getContacts(state);\n//   const filter = getFilter(state);\n\n//   const normalizedFilter = filter.toLocaleLowerCase();\n//   return contacts.filter(contact =>\n//     contact.name.toLocaleLowerCase().includes(normalizedFilter),\n//   );\n// };\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  postAddContact,\n  fetchContacts,\n} from '../../redux/phonebook-operations';\nimport shortid from 'shortid';\nimport { getContacts, isLoader } from '../../redux/phonebook-selectors';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const loader = useSelector(isLoader);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  // const onSubmit = contact => {\n  //   // dispatch(fetchContacts());\n  //   dispatch(addContact(contact));\n  // };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    resetForm();\n    checkContactList();\n  };\n\n  const onFormChange = ({ target }) => {\n    const { name, value } = target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const addNewContact = () => {\n    const newContactId = shortid.generate();\n    const newContact = { name, number, id: newContactId };\n    dispatch(postAddContact(newContact));\n  };\n\n  const checkContactList = () => {\n    const normalizedName = name.toLocaleLowerCase();\n    contacts.find(\n      contact => contact.name.toLocaleLowerCase() === normalizedName,\n    )\n      ? alert(`${name} is already in contacts`)\n      : addNewContact();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <form className={s.form} onSubmit={onSubmitForm}>\n        <label className={s.label} htmlFor={shortid.generate()}>\n          <span className={s.span}>Name</span>\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Григор Григорян\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={onFormChange}\n            id={shortid.generate()}\n          />\n        </label>\n        <label className={s.label} htmlFor={shortid.generate()}>\n          <span className={s.span}>Number</span>\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"111-22-33\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={onFormChange}\n            id={shortid.generate()}\n          />\n        </label>\n        <div className={s.btnBox}>\n          <button className={s.btn} type=\"submit\">\n            Add contact\n          </button>\n          <div className={s.loader}>{loader && <h1>Loading...</h1>}</div>\n        </div>\n      </form>\n    </>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/phonebook-operations';\nimport { getFilteredContacts } from '../../redux/phonebook-selectors';\nimport s from './ContactList.module.css';\n\nexport default function ContactList() {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n  // console.log(contacts);\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    <ul className={s.ul}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.li} key={id}>\n          {name}: {number}\n          <button className={s.btn} onClick={() => onDeleteContact(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../../redux/phonebook-actions';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = e => dispatch(changeFilter(e.target.value));\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      <span className={s.span}>Find contacts by name</span>\r\n      <input className={s.input} type=\"text\" onChange={onChange}></input>\r\n    </label>\r\n  );\r\n}\r\n","import s from './Phonebook.module.css';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport Filter from '../Filter/Filter';\r\n\r\nfunction Phonebook() {\r\n  return (\r\n    <div className={s.box}>\r\n      <div>\r\n        <h1 className={s.title}>Phonebook</h1>\r\n        <ContactForm />\r\n      </div>\r\n      <div className={s.divBox}>\r\n        <h2 className={s.title}>Contacts</h2>\r\n        <div className={s.boxList}>\r\n          <Filter />\r\n          <ContactList />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Phonebook;\r\n","import './App.css';\r\nimport Phonebook from './components/Phonebook/Phonebook';\r\n\r\nfunction App() {\r\n  return (\r\n    <section className=\"container\">\r\n      <Phonebook />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport { store } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__3o1YR\",\"box\":\"Phonebook_box__2-JnN\",\"divBox\":\"Phonebook_divBox__1aF9x\",\"boxList\":\"Phonebook_boxList__2QcCV\"};"],"sourceRoot":""}