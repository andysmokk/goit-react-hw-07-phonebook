{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/Phonebook/Phonebook.module.css","redux/phonebook-actions.js","redux/phonebook-reducer.js","redux/store.js","redux/phonebook-selectors.js","components/ContactForm/ContactForm.js","redux/phonebook-operations.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Phonebook/Phonebook.js","App.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","deleteContact","changeFilter","contactsReducer","createReducer","_","action","payload","state","filter","id","filterReducer","rootReducer","combineReducers","contacts","store","configureStore","reducer","getContacts","getFilteredContacts","getFilter","console","log","normalizedFilter","toLocaleLowerCase","contact","name","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","useEffect","axios","get","then","data","catch","error","onSubmit","post","addContacts","onFormChange","target","value","checkContactList","normalizedName","find","alert","newContactId","shortid","generate","addContact","resetForm","className","s","form","e","preventDefault","label","htmlFor","span","input","type","placeholder","pattern","title","required","onChange","btn","ContactList","ul","map","li","onClick","onDeleteContact","Filter","Phonebook","box","divBox","boxList","App","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6ffc307.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactList_li__34r2F\",\"ul\":\"ContactList_ul__1dcpO\",\"btn\":\"ContactList_btn__2COK9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2-7Dw\",\"span\":\"Filter_span__JjXqJ\",\"input\":\"Filter_input__3Grxa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__35e5B\",\"label\":\"ContactForm_label__19SkC\",\"input\":\"ContactForm_input__2XnLq\",\"span\":\"ContactForm_span__17CWr\",\"btn\":\"ContactForm_btn__198Ud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__3o1YR\",\"box\":\"Phonebook_box__2-JnN\",\"divBox\":\"Phonebook_divBox__1aF9x\",\"boxList\":\"Phonebook_boxList__2QcCV\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContactRequest = createAction('addContactRequest');\nexport const addContactSuccess = createAction('addContactSuccess');\nexport const addContactError = createAction('addContactError');\n\nexport const fetchContactRequest = createAction('fetchContactRequest');\nexport const fetchContactSuccess = createAction('fetchContactSuccess');\nexport const fetchContactError = createAction('fetchContactError');\n\nexport const deleteContact = createAction('contact/delete');\n// export const submitContacts = createAction('contact/submit');\nexport const changeFilter = createAction('contact/changeFilter');\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  deleteContact,\n  // submitContacts,\n  changeFilter,\n} from './phonebook-actions';\nimport { addContactSuccess, fetchContactSuccess } from './phonebook-actions';\n// import defaultContacts from '../json/defaultContacts.json';\n\nexport const contactsReducer = createReducer([], {\n  [fetchContactSuccess]: (_, action) => action.payload,\n  [addContactSuccess]: (state, action) => [...state, action.payload],\n\n  [deleteContact]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nexport const filterReducer = createReducer('', {\n  [changeFilter]: (_, action) => action.payload,\n});\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\n// import {\n//   // persistStore,\n//   // persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\nimport { contactsReducer, filterReducer } from './phonebook-reducer';\n\n// const contactsPersistConfig = {\n//   key: 'contacts',\n//   storage,\n//   blacklist: ['filter'],\n// };\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n});\n\n// const persistedReducer = persistReducer(contactsPersistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: rootReducer,\n  // middleware: getDefaultMiddleware =>\n  //   getDefaultMiddleware({\n  //     serializableCheck: {\n  //       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n  //     },\n  //   }),\n  // devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n\nexport { store };\n","export const getContacts = state => state.contacts;\nexport const getFilter = state => state.filter;\n\nexport const getFilteredContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n\n  console.log(contacts);\n\n  const normalizedFilter = filter.toLocaleLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(normalizedFilter),\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContacts, fetchContacts } from '../../redux/phonebook-operations';\nimport shortid from 'shortid';\nimport { getContacts } from '../../redux/phonebook-selectors';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onSubmit = contact => {\n    // dispatch(fetchContacts());\n    dispatch(addContacts(contact));\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    resetForm();\n    checkContactList();\n  };\n\n  const onFormChange = ({ target }) => {\n    const { name, value } = target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const addContact = () => {\n    const newContactId = shortid.generate();\n    const newContact = { name, number, id: newContactId };\n    onSubmit(newContact);\n  };\n\n  const checkContactList = () => {\n    const normalizedName = name.toLocaleLowerCase();\n    contacts.find(\n      contact => contact.name.toLocaleLowerCase() === normalizedName,\n    )\n      ? alert(`${name} is already in contacts`)\n      : addContact();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={onSubmitForm}>\n      <label className={s.label} htmlFor={shortid.generate()}>\n        <span className={s.span}>Name</span>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Григор Григорян\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={onFormChange}\n          id={shortid.generate()}\n        />\n      </label>\n      <label className={s.label} htmlFor={shortid.generate()}>\n        <span className={s.span}>Number</span>\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"111-22-33\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={onFormChange}\n          id={shortid.generate()}\n        />\n      </label>\n      <button className={s.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './phonebook-actions';\n\nexport const addContacts = contact => dispatch => {\n  dispatch(addContactRequest());\n  console.log('contact', contact);\n\n  axios\n    .post('http://localhost:3000/contacts', contact)\n    .then(({ data }) => {\n      console.log('data', data);\n      dispatch(addContactSuccess(data));\n    })\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactRequest());\n\n  axios\n    .get('http://localhost:3000/contacts')\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch(error => dispatch(fetchContactError(error)));\n};\n\n// export const submitContacts = text => async dispatch => {\n//   const options = {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify(text),\n//   };\n\n//   await dispatch(addContactRequest());\n\n//   return await fetch('http://localhost:3000/contacts', options)\n//     .then(response => response.json())\n//     .then(data => dispatch(addContactSuccess(data)))\n//     .catch(error => dispatch(addContactError(error)));\n// };\n\n// export const fetchContacts = () => async dispatch => {\n//   await dispatch(fetchContactRequest());\n\n//   return await fetch('http://localhost:3000/contacts')\n//     .then(response => response.json())\n//     .then(data => dispatch(fetchContactSuccess(data)))\n//     .catch(error => dispatch(fetchContactError(error)));\n// };\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/phonebook-actions';\nimport { getFilteredContacts } from '../../redux/phonebook-selectors';\nimport s from './ContactList.module.css';\n\nexport default function ContactList() {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n  console.log(contacts);\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    <ul className={s.ul}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.li} key={id}>\n          {name}: {number}\n          <button className={s.btn} onClick={() => onDeleteContact(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../../redux/phonebook-actions';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = e => dispatch(changeFilter(e.target.value));\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      <span className={s.span}>Find contacts by name</span>\r\n      <input className={s.input} type=\"text\" onChange={onChange}></input>\r\n    </label>\r\n  );\r\n}\r\n","import s from './Phonebook.module.css';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport Filter from '../Filter/Filter';\r\n\r\nfunction Phonebook() {\r\n  return (\r\n    <div className={s.box}>\r\n      <div>\r\n        <h1 className={s.title}>Phonebook</h1>\r\n        <ContactForm />\r\n      </div>\r\n      <div className={s.divBox}>\r\n        <h2 className={s.title}>Contacts</h2>\r\n        <div className={s.boxList}>\r\n          <Filter />\r\n          <ContactList />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Phonebook;\r\n","import './App.css';\r\nimport Phonebook from './components/Phonebook/Phonebook';\r\n\r\nfunction App() {\r\n  return (\r\n    <section className=\"container\">\r\n      <Phonebook />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport { store } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nconsole.log(store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}