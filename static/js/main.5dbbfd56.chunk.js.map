{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/Phonebook/Phonebook.module.css","redux/phonebook-actions.js","redux/phonebook-operations.js","redux/phonebook-reducer.js","redux/store.js","redux/phonebook-selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Phonebook/Phonebook.js","App.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","deleteContact","changeFilter","addContacts","contact","dispatch","axios","post","then","data","catch","error","contactsReducer","createReducer","state","action","payload","get","_","filter","id","filterReducer","rootReducer","combineReducers","contacts","store","configureStore","reducer","getContacts","getFilteredContacts","getFilter","console","log","normalizedFilter","toLocaleLowerCase","name","includes","ContactForm","useState","setName","number","setNumber","useSelector","useDispatch","onFormChange","target","value","addContact","newContactId","shortid","generate","checkContactList","normalizedName","find","alert","resetForm","className","s","form","onSubmit","e","preventDefault","label","htmlFor","span","input","type","placeholder","pattern","title","required","onChange","btn","ContactList","ul","map","li","onClick","onDeleteContact","Filter","Phonebook","box","divBox","boxList","App","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5dbbfd56.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactList_li__34r2F\",\"ul\":\"ContactList_ul__1dcpO\",\"btn\":\"ContactList_btn__2COK9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2-7Dw\",\"span\":\"Filter_span__JjXqJ\",\"input\":\"Filter_input__3Grxa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__35e5B\",\"label\":\"ContactForm_label__19SkC\",\"input\":\"ContactForm_input__2XnLq\",\"span\":\"ContactForm_span__17CWr\",\"btn\":\"ContactForm_btn__198Ud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__3o1YR\",\"box\":\"Phonebook_box__2-JnN\",\"divBox\":\"Phonebook_divBox__1aF9x\",\"boxList\":\"Phonebook_boxList__2QcCV\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContactRequest = createAction('addContactRequest');\nexport const addContactSuccess = createAction('addContactSuccess');\nexport const addContactError = createAction('addContactError');\n\nexport const fetchContactRequest = createAction('fetchContactRequest');\nexport const fetchContactSuccess = createAction('fetchContactSuccess');\nexport const fetchContactError = createAction('fetchContactError');\n\nexport const deleteContact = createAction('contact/delete');\n// export const submitContacts = createAction('contact/submit');\nexport const changeFilter = createAction('contact/changeFilter');\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './phonebook-actions';\n\nexport const addContacts = contact => dispatch => {\n  dispatch(addContactRequest());\n\n  axios\n    .post('http://localhost:3000/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactRequest());\n\n  axios\n    .get('http://localhost:3000/contacts')\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch(error => dispatch(fetchContactError(error)));\n};\n\n// export const submitContacts = text => async dispatch => {\n//   const options = {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify(text),\n//   };\n\n//   await dispatch(addContactRequest());\n\n//   return await fetch('http://localhost:3000/contacts', options)\n//     .then(response => response.json())\n//     .then(data => dispatch(addContactSuccess(data)))\n//     .catch(error => dispatch(addContactError(error)));\n// };\n\n// export const fetchContacts = () => async dispatch => {\n//   await dispatch(fetchContactRequest());\n\n//   return await fetch('http://localhost:3000/contacts')\n//     .then(response => response.json())\n//     .then(data => dispatch(fetchContactSuccess(data)))\n//     .catch(error => dispatch(fetchContactError(error)));\n// };\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  deleteContact,\n  // submitContacts,\n  changeFilter,\n} from './phonebook-actions';\nimport { addContacts, fetchContacts } from './phonebook-operations';\n// import defaultContacts from '../json/defaultContacts.json';\n\nexport const contactsReducer = createReducer([], {\n  [addContacts]: (state, action) => [action.payload, ...state],\n  [fetchContacts]: (_, action) => action.payload,\n\n  [deleteContact]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nexport const filterReducer = createReducer('', {\n  [changeFilter]: (_, action) => action.payload,\n});\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\n// import {\n//   // persistStore,\n//   // persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\nimport { contactsReducer, filterReducer } from './phonebook-reducer';\n\n// const contactsPersistConfig = {\n//   key: 'contacts',\n//   storage,\n//   blacklist: ['filter'],\n// };\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n});\n\n// const persistedReducer = persistReducer(contactsPersistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: rootReducer,\n  // middleware: getDefaultMiddleware =>\n  //   getDefaultMiddleware({\n  //     serializableCheck: {\n  //       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n  //     },\n  //   }),\n  // devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n\nexport { store };\n","export const getContacts = state => state.contacts;\nexport const getFilter = state => state.filter;\n\nexport const getFilteredContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n\n  console.log(contacts);\n\n  const normalizedFilter = filter.toLocaleLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(normalizedFilter),\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContacts, fetchContacts } from '../../redux/phonebook-operations';\nimport shortid from 'shortid';\nimport { getContacts } from '../../redux/phonebook-selectors';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   fetchContacts();\n  // }, []);\n\n  const onSubmit = contact => {\n    dispatch(addContacts(contact));\n    // dispatch(fetchContacts());\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    resetForm();\n    checkContactList();\n  };\n\n  const onFormChange = ({ target }) => {\n    const { name, value } = target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const addContact = () => {\n    const newContactId = shortid.generate();\n    const newContact = { name, number, id: newContactId };\n    onSubmit(newContact);\n  };\n\n  const checkContactList = () => {\n    const normalizedName = name.toLocaleLowerCase();\n    contacts.find(\n      contact => contact.name.toLocaleLowerCase() === normalizedName,\n    )\n      ? alert(`${name} is already in contacts`)\n      : addContact();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={onSubmitForm}>\n      <label className={s.label} htmlFor={shortid.generate()}>\n        <span className={s.span}>Name</span>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Григор Григорян\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={onFormChange}\n          id={shortid.generate()}\n        />\n      </label>\n      <label className={s.label} htmlFor={shortid.generate()}>\n        <span className={s.span}>Number</span>\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"111-22-33\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={onFormChange}\n          id={shortid.generate()}\n        />\n      </label>\n      <button className={s.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/phonebook-actions';\nimport { getFilteredContacts } from '../../redux/phonebook-selectors';\nimport s from './ContactList.module.css';\n\nexport default function ContactList() {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n  console.log(contacts);\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    <ul className={s.ul}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.li} key={id}>\n          {name}: {number}\n          <button className={s.btn} onClick={() => onDeleteContact(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../../redux/phonebook-actions';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = e => dispatch(changeFilter(e.target.value));\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      <span className={s.span}>Find contacts by name</span>\r\n      <input className={s.input} type=\"text\" onChange={onChange}></input>\r\n    </label>\r\n  );\r\n}\r\n","import s from './Phonebook.module.css';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport Filter from '../Filter/Filter';\r\n\r\nfunction Phonebook() {\r\n  return (\r\n    <div className={s.box}>\r\n      <div>\r\n        <h1 className={s.title}>Phonebook</h1>\r\n        <ContactForm />\r\n      </div>\r\n      <div className={s.divBox}>\r\n        <h2 className={s.title}>Contacts</h2>\r\n        <div className={s.boxList}>\r\n          <Filter />\r\n          <ContactList />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Phonebook;\r\n","import './App.css';\r\nimport Phonebook from './components/Phonebook/Phonebook';\r\n\r\nfunction App() {\r\n  return (\r\n    <section className=\"container\">\r\n      <Phonebook />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport { store } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nconsole.log(store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}