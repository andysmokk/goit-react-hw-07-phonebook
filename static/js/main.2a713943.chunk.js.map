{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","redux/phonebook-actions.js","redux/phonebook-reducers.js","redux/store.js","redux/phonebook-selectors.js","components/ContactForm/ContactForm.js","redux/phonebook-operations.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Phonebook/Phonebook.js","App.js","index.js","components/Phonebook/Phonebook.module.css"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","contactsReducer","createReducer","_","action","payload","state","filter","id","filterReducer","loadingReducer","rootReducer","combineReducers","contacts","loading","store","configureStore","reducer","getContacts","isLoader","getFilteredContacts","getFilter","normalizedFilter","toLocaleLowerCase","contact","name","includes","ContactForm","useState","setName","number","setNumber","useSelector","loader","dispatch","useDispatch","useEffect","a","axios","get","data","onSubmit","post","addContacts","onFormChange","target","value","checkContactList","normalizedName","find","alert","newContactId","shortid","generate","addContact","resetForm","className","s","form","e","preventDefault","label","htmlFor","span","input","type","placeholder","pattern","title","required","onChange","btnBox","btn","ContactList","onDeleteContact","contactId","delete","ul","map","li","onClick","Filter","Phonebook","box","divBox","boxList","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a713943.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactList_li__34r2F\",\"ul\":\"ContactList_ul__1dcpO\",\"btn\":\"ContactList_btn__2COK9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2-7Dw\",\"span\":\"Filter_span__JjXqJ\",\"input\":\"Filter_input__3Grxa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__35e5B\",\"label\":\"ContactForm_label__19SkC\",\"input\":\"ContactForm_input__2XnLq\",\"span\":\"ContactForm_span__17CWr\",\"btn\":\"ContactForm_btn__198Ud\",\"btnBox\":\"ContactForm_btnBox__1R90l\",\"loader\":\"ContactForm_loader__1AvbQ\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContactRequest = createAction('addContactRequest');\nexport const addContactSuccess = createAction('addContactSuccess');\nexport const addContactError = createAction('addContactError');\n\nexport const fetchContactRequest = createAction('fetchContactRequest');\nexport const fetchContactSuccess = createAction('fetchContactSuccess');\nexport const fetchContactError = createAction('fetchContactError');\n\nexport const deleteContactRequest = createAction('deleteContactRequest');\nexport const deleteContactSuccess = createAction('deleteContactSuccess');\nexport const deleteContactError = createAction('deleteContactError');\n\n// export const deleteContact = createAction('contact/delete');\n// export const submitContacts = createAction('contact/submit');\nexport const changeFilter = createAction('contact/changeFilter');\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  // deleteContact,\n  // submitContacts,\n  changeFilter,\n} from './phonebook-actions';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './phonebook-actions';\n// import defaultContacts from '../json/defaultContacts.json';\n\nexport const contactsReducer = createReducer([], {\n  [fetchContactSuccess]: (_, action) => action.payload,\n  [addContactSuccess]: (state, action) => [...state, action.payload],\n  [deleteContactSuccess]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nexport const filterReducer = createReducer('', {\n  [changeFilter]: (_, action) => action.payload,\n});\n\nexport const loadingReducer = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\n// import {\n//   // persistStore,\n//   // persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\nimport {\n  contactsReducer,\n  filterReducer,\n  loadingReducer,\n} from './phonebook-reducers';\n\n// const contactsPersistConfig = {\n//   key: 'contacts',\n//   storage,\n//   blacklist: ['filter'],\n// };\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n  loading: loadingReducer,\n});\n\n// const persistedReducer = persistReducer(contactsPersistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: rootReducer,\n  // middleware: getDefaultMiddleware =>\n  //   getDefaultMiddleware({\n  //     serializableCheck: {\n  //       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n  //     },\n  //   }),\n  // devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n\nexport { store };\n","export const getContacts = state => state.contacts;\nexport const getFilter = state => state.filter;\nexport const isLoader = state => state.loading;\n\nexport const getFilteredContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n\n  const normalizedFilter = filter.toLocaleLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(normalizedFilter),\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContacts, fetchContacts } from '../../redux/phonebook-operations';\nimport shortid from 'shortid';\nimport { getContacts, isLoader } from '../../redux/phonebook-selectors';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const loader = useSelector(isLoader);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onSubmit = contact => {\n    // dispatch(fetchContacts());\n    dispatch(addContacts(contact));\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    resetForm();\n    checkContactList();\n  };\n\n  const onFormChange = ({ target }) => {\n    const { name, value } = target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const addContact = () => {\n    const newContactId = shortid.generate();\n    const newContact = { name, number, id: newContactId };\n    onSubmit(newContact);\n  };\n\n  const checkContactList = () => {\n    const normalizedName = name.toLocaleLowerCase();\n    contacts.find(\n      contact => contact.name.toLocaleLowerCase() === normalizedName,\n    )\n      ? alert(`${name} is already in contacts`)\n      : addContact();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <form className={s.form} onSubmit={onSubmitForm}>\n        <label className={s.label} htmlFor={shortid.generate()}>\n          <span className={s.span}>Name</span>\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Григор Григорян\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={onFormChange}\n            id={shortid.generate()}\n          />\n        </label>\n        <label className={s.label} htmlFor={shortid.generate()}>\n          <span className={s.span}>Number</span>\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"111-22-33\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={onFormChange}\n            id={shortid.generate()}\n          />\n        </label>\n        <div className={s.btnBox}>\n          <button className={s.btn} type=\"submit\">\n            Add contact\n          </button>\n          <div className={s.loader}>{loader && <h1>Loading...</h1>}</div>\n        </div>\n      </form>\n    </>\n  );\n}\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './phonebook-actions';\n\nexport const addContacts = contact => async dispatch => {\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await axios.post(\n      'http://localhost:3000/contacts',\n      contact,\n    );\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n  // axios\n  //   .post('http://localhost:3000/contacts', contact)\n  //   .then(({ data }) => dispatch(addContactSuccess(data)))\n  //   .catch(error => dispatch(addContactError(error)));\n};\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactRequest());\n\n  try {\n    const { data } = await axios.get('http://localhost:3000/contacts');\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error));\n  }\n  // axios\n  //   .get('http://localhost:3000/contacts')\n  //   .then(({ data }) => dispatch(fetchContactSuccess(data)))\n  //   .catch(error => dispatch(fetchContactError(error)));\n};\n\nexport const deleteContact = contactId => async dispatch => {\n  dispatch(deleteContactRequest());\n\n  try {\n    await axios.delete(`http://localhost:3000/contacts/${contactId}`);\n    dispatch(deleteContactSuccess(contactId));\n  } catch (error) {\n    dispatch(deleteContactError(error));\n  }\n  //   axios\n  //     .delete(`http://localhost:3000/contacts/${contactId}`)\n  //     .then(() => dispatch(deleteContactSuccess(contactId)))\n  //     .catch(error => dispatch(deleteContactError(error)));\n};\n\n// export const submitContacts = text => async dispatch => {\n//   const options = {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify(text),\n//   };\n\n//   dispatch(addContactRequest());\n\n//   return await fetch('http://localhost:3000/contacts', options)\n//     .then(response => response.json())\n//     .then(data => dispatch(addContactSuccess(data)))\n//     .catch(error => dispatch(addContactError(error)));\n// };\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/phonebook-operations';\nimport { getFilteredContacts } from '../../redux/phonebook-selectors';\nimport s from './ContactList.module.css';\n\nexport default function ContactList() {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n  // console.log(contacts);\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    <ul className={s.ul}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.li} key={id}>\n          {name}: {number}\n          <button className={s.btn} onClick={() => onDeleteContact(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../../redux/phonebook-actions';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = e => dispatch(changeFilter(e.target.value));\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      <span className={s.span}>Find contacts by name</span>\r\n      <input className={s.input} type=\"text\" onChange={onChange}></input>\r\n    </label>\r\n  );\r\n}\r\n","import s from './Phonebook.module.css';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport Filter from '../Filter/Filter';\r\n\r\nfunction Phonebook() {\r\n  return (\r\n    <div className={s.box}>\r\n      <div>\r\n        <h1 className={s.title}>Phonebook</h1>\r\n        <ContactForm />\r\n      </div>\r\n      <div className={s.divBox}>\r\n        <h2 className={s.title}>Contacts</h2>\r\n        <div className={s.boxList}>\r\n          <Filter />\r\n          <ContactList />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Phonebook;\r\n","import './App.css';\r\nimport Phonebook from './components/Phonebook/Phonebook';\r\n\r\nfunction App() {\r\n  return (\r\n    <section className=\"container\">\r\n      <Phonebook />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport { store } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__3o1YR\",\"box\":\"Phonebook_box__2-JnN\",\"divBox\":\"Phonebook_divBox__1aF9x\",\"boxList\":\"Phonebook_boxList__2QcCV\"};"],"sourceRoot":""}