{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/phonebook-actions.js","redux/phonebook-reducer.js","redux/store.js","redux/phonebook-selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Phonebook/Phonebook.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/Phonebook/Phonebook.module.css"],"names":["module","exports","deleteContact","createAction","submitContacts","changeFilter","contactsReducer","createReducer","defaultContacts","state","action","payload","filter","id","filterReducer","_","contactsPersistConfig","key","storage","blacklist","rootReducer","combineReducers","contacts","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","getContacts","getFilteredContacts","getFilter","normalizedFilter","toLocaleLowerCase","contact","name","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","onFormChange","target","value","addContact","newContactId","shortid","generate","checkContactList","normalizedName","find","alert","resetForm","className","s","form","onSubmit","e","preventDefault","label","htmlFor","span","input","type","placeholder","pattern","title","required","onChange","btn","ContactList","ul","map","li","onClick","onDeleteContact","Filter","Phonebook","box","divBox","boxList","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.7fe6ca34.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactList_li__34r2F\",\"ul\":\"ContactList_ul__1dcpO\",\"btn\":\"ContactList_btn__2COK9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2-7Dw\",\"span\":\"Filter_span__JjXqJ\",\"input\":\"Filter_input__3Grxa\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const deleteContact = createAction('contact/delete');\r\nexport const submitContacts = createAction('contact/submit');\r\nexport const changeFilter = createAction('contact/changeFilter');\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  deleteContact,\r\n  submitContacts,\r\n  changeFilter,\r\n} from './phonebook-actions';\r\nimport defaultContacts from '../json/defaultContacts.json';\r\n\r\nexport const contactsReducer = createReducer(defaultContacts, {\r\n  [submitContacts]: (state, action) => [action.payload, ...state],\r\n  [deleteContact]: (state, action) =>\r\n    state.filter(({ id }) => id !== action.payload),\r\n});\r\n\r\nexport const filterReducer = createReducer('', {\r\n  [changeFilter]: (_, action) => action.payload,\r\n});\r\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { contactsReducer, filterReducer } from './phonebook-reducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(contactsPersistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","export const getContacts = state => state.contacts;\r\nexport const getFilter = state => state.filter;\r\n\r\nexport const getFilteredContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n\r\n  const normalizedFilter = filter.toLocaleLowerCase();\r\n  return contacts.filter(contact =>\r\n    contact.name.toLocaleLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { submitContacts } from '../../redux/phonebook-actions';\r\nimport shortid from 'shortid';\r\nimport { getContacts } from '../../redux/phonebook-selectors';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = contact => dispatch(submitContacts(contact));\r\n\r\n  const onSubmitForm = e => {\r\n    e.preventDefault();\r\n    resetForm();\r\n    checkContactList();\r\n  };\r\n\r\n  const onFormChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const addContact = () => {\r\n    const newContactId = shortid.generate();\r\n    const newContact = { name, number, id: newContactId };\r\n    onSubmit(newContact);\r\n  };\r\n\r\n  const checkContactList = () => {\r\n    const normalizedName = name.toLocaleLowerCase();\r\n    contacts.find(\r\n      contact => contact.name.toLocaleLowerCase() === normalizedName,\r\n    )\r\n      ? alert(`${name} is already in contacts`)\r\n      : addContact();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={onSubmitForm}>\r\n      <label className={s.label} htmlFor={shortid.generate()}>\r\n        <span className={s.span}>Name</span>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Григор Григорян\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={onFormChange}\r\n          id={shortid.generate()}\r\n        />\r\n      </label>\r\n      <label className={s.label} htmlFor={shortid.generate()}>\r\n        <span className={s.span}>Number</span>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          placeholder=\"111-22-33\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={onFormChange}\r\n          id={shortid.generate()}\r\n        />\r\n      </label>\r\n      <button className={s.btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/phonebook-actions';\r\nimport { getFilteredContacts } from '../../redux/phonebook-selectors';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getFilteredContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id => dispatch(deleteContact(id));\r\n\r\n  return (\r\n    <ul className={s.ul}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.li} key={id}>\r\n          {name}: {number}\r\n          <button className={s.btn} onClick={() => onDeleteContact(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../../redux/phonebook-actions';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = e => dispatch(changeFilter(e.target.value));\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      <span className={s.span}>Find contacts by name</span>\r\n      <input className={s.input} type=\"text\" onChange={onChange}></input>\r\n    </label>\r\n  );\r\n}\r\n","import s from './Phonebook.module.css';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport Filter from '../Filter/Filter';\r\n\r\nfunction Phonebook() {\r\n  return (\r\n    <div className={s.box}>\r\n      <div>\r\n        <h1 className={s.title}>Phonebook</h1>\r\n        <ContactForm />\r\n      </div>\r\n      <div className={s.divBox}>\r\n        <h2 className={s.title}>Contacts</h2>\r\n        <div className={s.boxList}>\r\n          <Filter />\r\n          <ContactList />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Phonebook;\r\n","import './App.css';\r\nimport Phonebook from './components/Phonebook/Phonebook';\r\n\r\nfunction App() {\r\n  return (\r\n    <section className=\"container\">\r\n      <Phonebook />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './redux/store';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__35e5B\",\"label\":\"ContactForm_label__19SkC\",\"input\":\"ContactForm_input__2XnLq\",\"span\":\"ContactForm_span__17CWr\",\"btn\":\"ContactForm_btn__198Ud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__3o1YR\",\"box\":\"Phonebook_box__2-JnN\",\"divBox\":\"Phonebook_divBox__1aF9x\",\"boxList\":\"Phonebook_boxList__2QcCV\"};"],"sourceRoot":""}